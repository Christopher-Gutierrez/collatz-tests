==96== Memcheck, a memory error detector
==96== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==96== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==96== Command: ./TestCollatz
==96== 
==96== Warning: set address range perms: large range [0x667000, 0x183e4000) (defined)
Running main() from gtest_main.cc
[==========] Running 19 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 19 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (27 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (5 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (5 ms)
[ RUN      ] CollatzFixture.cycle_length_op_1
[       OK ] CollatzFixture.cycle_length_op_1 (5 ms)
[ RUN      ] CollatzFixture.cycle_length_op_2
[       OK ] CollatzFixture.cycle_length_op_2 (3 ms)
[ RUN      ] CollatzFixture.cycle_length_op_3
[       OK ] CollatzFixture.cycle_length_op_3 (5 ms)
[ RUN      ] CollatzFixture.cache_nums_1
[       OK ] CollatzFixture.cache_nums_1 (3 ms)
[ RUN      ] CollatzFixture.cache_nums_2
[       OK ] CollatzFixture.cache_nums_2 (3 ms)
[ RUN      ] CollatzFixture.cache_nums_3
[       OK ] CollatzFixture.cache_nums_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (5 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (3 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (4 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (9 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (7 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (50 ms)
[ RUN      ] CollatzFixture.solve_3
[       OK ] CollatzFixture.solve_3 (5 ms)
[----------] 19 tests from CollatzFixture (196 ms total)

[----------] Global test environment tear-down
[==========] 19 tests from 1 test case ran. (277 ms total)
[  PASSED  ] 19 tests.
==96== 
==96== HEAP SUMMARY:
==96==     in use at exit: 72,704 bytes in 1 blocks
==96==   total heap usage: 321 allocs, 320 frees, 145,348 bytes allocated
==96== 
==96== LEAK SUMMARY:
==96==    definitely lost: 0 bytes in 0 blocks
==96==    indirectly lost: 0 bytes in 0 blocks
==96==      possibly lost: 0 bytes in 0 blocks
==96==    still reachable: 72,704 bytes in 1 blocks
==96==         suppressed: 0 bytes in 0 blocks
==96== Rerun with --leak-check=full to see details of leaked memory
==96== 
==96== For counts of detected and suppressed errors, rerun with: -v
==96== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 55
Branches executed:100.00% of 42
Taken at least once:78.57% of 42
Calls executed:100.00% of 17
Creating 'Collatz.c++.gcov'
